name: Build and Push Docker Image

on:
  push:
    branches: [ "main" ]
    tags: 
      - "v*.*.*"
      - "*.*.*"
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          touch .env
          echo "PORT=3000" >> .env
          echo "REDIS_URL=redis://redis:6379" >> .env
          echo "WS_PORT=8080" >> .env

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set latest tag if on main branch
        id: set_latest
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "LATEST_TAG=,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT
          else
            echo "LATEST_TAG=" >> $GITHUB_OUTPUT
          fi

      - name: Set stable tag if tag is created on main branch
        id: set_stable
        run: |
          if [[ "${GITHUB_REF}" =~ refs/tags/v.* && "${{ github.event.base_ref }}" == "refs/heads/main" ]]; then
            echo "STABLE_TAG=,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:stable" >> $GITHUB_OUTPUT
          else
            echo "STABLE_TAG=" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}${{ steps.set_latest.outputs.LATEST_TAG }}${{ steps.set_stable.outputs.STABLE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
      #     format: 'table'
      #     exit-code: '1'
      #     ignore-unfixed: true
      #     vuln-type: 'os,library'
      #     severity: 'CRITICAL,HIGH'

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }} 